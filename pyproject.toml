[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "packaging-demo-anashr"
# version = "0.0.5"
authors = [{ name = "Yug", email = "yugg@test.edu" }]
description = "Demo for packaging"
readme = "README.md"
keywords = ["one", "two"]
license = { text = "Apache" }
dependencies = ["numpy"]
dynamic = ['version']

[project.optional-dependencies]
test = ['pytest', 'pytest-cov']
release = ['build', 'twine']
static-code-qa = ['pre-commit']
dev = ['packaging-demo-anashr[test, release, static-code-qa]']

[tool.setuptools]
# Letting setuptools automatically discover packages if not explicitly specified

[tool.setuptools.packages.find]
# Search the current directory
where = ["."]
# Include all packages under 'packaging_demo'
include = ["packaging_demo*", "packaging_demo.*"]
exclude = []                                      # You can specify patterns to exclude certain packages
namespaces = false                                # Disable PEP 420 namespace packages if not needed

[tool.setuptools.package-data]
mypkg = ["*.json"]

[tool.black]
line-length = 99
exclude = '/(\.git|\.hg|\.mypy_cache|\.tox|\.venv|_build|buck-out|build|dist|pyproject\.toml)/'


[tool.flake8]
docstring-convention = "all"
ignore = ["D100", "D103", "D104", "D107", "D212", "E501", "W503", "W605", "D203"]
exclude = ["venv"]
max-line-length = 99

# radon
radon-max-cc = 10

[tool.isort]
profile = "black"
multi_line_output = "VERTICAL_HANGING_INDENT"
force_grid_wrap = 2
line_length = 99


[tool.pylint."messages control"]
disable = ["line-too-long", "trailing-whitespace", "missing-function-docstring", "consider-using-f-string", "import-error", "too-few-public-methods", "redefined-outer-name", 'missing-module-docstring', 'pointless-statement', 'invalid-name', 'undefined-variable', 'unspecified-encoding']


[tool.ruff]
# Enable flake8-bugbear (`B`) rules.
select = ["E", "F", "B", "ERA"]

# Never enforce `E501` (line length violations).
ignore = ["E501", "F401"]

# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

line-length = 99

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
"path/to/file.py" = ["E402"]
